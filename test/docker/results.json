{
  "SchemaVersion": 2,
  "CreatedAt": "2024-05-10T16:07:39.474380767Z",
  "ArtifactName": ".",
  "ArtifactType": "filesystem",
  "Metadata": {
    "ImageConfig": {
      "architecture": "",
      "created": "0001-01-01T00:00:00Z",
      "os": "",
      "rootfs": {
        "type": "",
        "diff_ids": null
      },
      "config": {}
    }
  },
  "Results": [
    {
      "Target": "poetry.lock",
      "Class": "lang-pkgs",
      "Type": "poetry",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-34064",
          "PkgID": "jinja2@3.1.3",
          "PkgName": "jinja2",
          "PkgIdentifier": {
            "PURL": "pkg:pypi/jinja2@3.1.3",
            "UID": "dd569de00312a8c6"
          },
          "InstalledVersion": "3.1.3",
          "FixedVersion": "3.1.4",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-34064",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory pip",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"
          },
          "Title": "jinja2: accepts keys containing non-attribute characters",
          "Description": "Jinja is an extensible templating engine. The `xmlattr` filter in affected versions of Jinja accepts keys containing non-attribute characters. XML/HTML attributes cannot contain spaces, `/`, `\u003e`, or `=`, as each would then be interpreted as starting a separate attribute. If an application accepts keys (as opposed to only values) as user input, and renders these in pages that other users see as well, an attacker could use this to inject other attributes and perform XSS. The fix for CVE-2024-22195 only addressed spaces but not other characters. Accepting keys as user input is now explicitly considered an unintended use case of the `xmlattr` filter, and code that does so without otherwise validating the input should be flagged as insecure, regardless of Jinja version. Accepting _values_ as user input continues to be safe. This vulnerability is fixed in 3.1.4.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-79"
          ],
          "VendorSeverity": {
            "ghsa": 2,
            "redhat": 2,
            "ubuntu": 2
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
              "V3Score": 5.4
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
              "V3Score": 5.4
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-34064",
            "https://github.com/pallets/jinja",
            "https://github.com/pallets/jinja/commit/0668239dc6b44ef38e7a6c9f91f312fd4ca581cb",
            "https://github.com/pallets/jinja/security/advisories/GHSA-h75v-3vvj-5mfj",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-34064",
            "https://www.cve.org/CVERecord?id=CVE-2024-34064"
          ],
          "PublishedDate": "2024-05-06T15:15:23.803Z",
          "LastModifiedDate": "2024-05-06T16:00:59.253Z"
        }
      ]
    },
    {
      "Target": "docker/Dockerfile",
      "Class": "config",
      "Type": "dockerfile",
      "MisconfSummary": {
        "Successes": 24,
        "Failures": 3,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS013",
          "AVDID": "AVD-DS-0013",
          "Title": "'RUN cd ...' to change directory",
          "Description": "Use WORKDIR instead of proliferating instructions like 'RUN cd â€¦ \u0026\u0026 do-something', which are hard to read, troubleshoot, and maintain.",
          "Message": "RUN should not be used to change directory: 'cd src     \u0026\u0026 poetry install --only main --sync     \u0026\u0026 rm -rf $HOME/.cache/pip $HOME/.cache/pypoetry/artifacts'. Use 'WORKDIR' statement instead.",
          "Namespace": "builtin.dockerfile.DS013",
          "Query": "data.builtin.dockerfile.DS013.deny",
          "Resolution": "Use WORKDIR to change directory",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds013",
          "References": [
            "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#workdir",
            "https://avd.aquasec.com/misconfig/ds013"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "StartLine": 29,
            "EndLine": 31,
            "Code": {
              "Lines": [
                {
                  "Number": 29,
                  "Content": "RUN cd src \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;64mRUN\u001b[0m \u001b[38;5;33mcd\u001b[0m src \u001b[38;5;124m\\",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 30,
                  "Content": "    \u0026\u0026 poetry install --only main --sync \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m    \u001b[38;5;245m\u0026\u0026\u001b[0m poetry install --only main --sync \u001b[38;5;124m\\",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 31,
                  "Content": "    \u0026\u0026 rm -rf $HOME/.cache/pip $HOME/.cache/pypoetry/artifacts",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m    \u001b[38;5;245m\u0026\u0026\u001b[0m rm -rf \u001b[38;5;33m$HOME\u001b[0m/.cache/pip \u001b[38;5;33m$HOME\u001b[0m/.cache/pypoetry/artifacts",
                  "FirstCause": false,
                  "LastCause": true
                }
              ]
            }
          }
        },
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS026",
          "AVDID": "AVD-DS-0026",
          "Title": "No HEALTHCHECK defined",
          "Description": "You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.",
          "Message": "Add HEALTHCHECK instruction in your Dockerfile",
          "Namespace": "builtin.dockerfile.DS026",
          "Query": "data.builtin.dockerfile.DS026.deny",
          "Resolution": "Add HEALTHCHECK instruction in Dockerfile",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds026",
          "References": [
            "https://blog.aquasec.com/docker-security-best-practices",
            "https://avd.aquasec.com/misconfig/ds026"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS029",
          "AVDID": "AVD-DS-0029",
          "Title": "'apt-get' missing '--no-install-recommends'",
          "Description": "'apt-get' install should use '--no-install-recommends' to minimize image size.",
          "Message": "'--no-install-recommends' flag is missed: 'apt-get -y update \u0026\u0026 apt-get -y install     curl     build-essential     \u0026\u0026 apt-get -y clean'",
          "Namespace": "builtin.dockerfile.DS029",
          "Query": "data.builtin.dockerfile.DS029.deny",
          "Resolution": "Add '--no-install-recommends' flag to 'apt-get'",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds029",
          "References": [
            "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/",
            "https://avd.aquasec.com/misconfig/ds029"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "StartLine": 7,
            "EndLine": 10,
            "Code": {
              "Lines": [
                {
                  "Number": 7,
                  "Content": "RUN apt-get -y update \u0026\u0026 apt-get -y install \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;64mRUN\u001b[0m apt-get -y update \u001b[38;5;245m\u0026\u0026\u001b[0m apt-get -y install \u001b[38;5;124m\\",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 8,
                  "Content": "    curl \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m    curl \u001b[38;5;124m\\",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 9,
                  "Content": "    build-essential \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m    build-essential \u001b[38;5;124m\\",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 10,
                  "Content": "    \u0026\u0026 apt-get -y clean",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m    \u001b[38;5;245m\u0026\u0026\u001b[0m apt-get -y clean",
                  "FirstCause": false,
                  "LastCause": true
                }
              ]
            }
          }
        }
      ]
    },
    {
      "Target": "docker/Dockerfile.test",
      "Class": "config",
      "Type": "dockerfile",
      "MisconfSummary": {
        "Successes": 24,
        "Failures": 3,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS013",
          "AVDID": "AVD-DS-0013",
          "Title": "'RUN cd ...' to change directory",
          "Description": "Use WORKDIR instead of proliferating instructions like 'RUN cd â€¦ \u0026\u0026 do-something', which are hard to read, troubleshoot, and maintain.",
          "Message": "RUN should not be used to change directory: 'cd /builds/socle/back/docapid-api     \u0026\u0026 poetry install     \u0026\u0026 rm -rf /builds/*'. Use 'WORKDIR' statement instead.",
          "Namespace": "builtin.dockerfile.DS013",
          "Query": "data.builtin.dockerfile.DS013.deny",
          "Resolution": "Use WORKDIR to change directory",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds013",
          "References": [
            "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#workdir",
            "https://avd.aquasec.com/misconfig/ds013"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "StartLine": 30,
            "EndLine": 32,
            "Code": {
              "Lines": [
                {
                  "Number": 30,
                  "Content": "RUN cd /builds/socle/back/docapid-api \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "RUN cd /builds/socle/back/docapid-api \\",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 31,
                  "Content": "    \u0026\u0026 poetry install \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "    \u0026\u0026 poetry install \\",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 32,
                  "Content": "    \u0026\u0026 rm -rf /builds/*",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "    \u0026\u0026 rm -rf /builds/*",
                  "FirstCause": false,
                  "LastCause": true
                }
              ]
            }
          }
        },
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS026",
          "AVDID": "AVD-DS-0026",
          "Title": "No HEALTHCHECK defined",
          "Description": "You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.",
          "Message": "Add HEALTHCHECK instruction in your Dockerfile",
          "Namespace": "builtin.dockerfile.DS026",
          "Query": "data.builtin.dockerfile.DS026.deny",
          "Resolution": "Add HEALTHCHECK instruction in Dockerfile",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds026",
          "References": [
            "https://blog.aquasec.com/docker-security-best-practices",
            "https://avd.aquasec.com/misconfig/ds026"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS029",
          "AVDID": "AVD-DS-0029",
          "Title": "'apt-get' missing '--no-install-recommends'",
          "Description": "'apt-get' install should use '--no-install-recommends' to minimize image size.",
          "Message": "'--no-install-recommends' flag is missed: 'apt-get -y update \u0026\u0026 apt-get -y install     curl     build-essential     postgresql'",
          "Namespace": "builtin.dockerfile.DS029",
          "Query": "data.builtin.dockerfile.DS029.deny",
          "Resolution": "Add '--no-install-recommends' flag to 'apt-get'",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds029",
          "References": [
            "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/",
            "https://avd.aquasec.com/misconfig/ds029"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "StartLine": 7,
            "EndLine": 10,
            "Code": {
              "Lines": [
                {
                  "Number": 7,
                  "Content": "RUN apt-get -y update \u0026\u0026 apt-get -y install \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "RUN apt-get -y update \u0026\u0026 apt-get -y install \\",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 8,
                  "Content": "    curl \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "    curl \\",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 9,
                  "Content": "    build-essential \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "    build-essential \\",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 10,
                  "Content": "    postgresql",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "    postgresql",
                  "FirstCause": false,
                  "LastCause": true
                }
              ]
            }
          }
        }
      ]
    }
  ]
}
