#!/bin/bash

# help
function help() {
  cat << EOS >&2
scan2html v0.2.2

Usage: trivy scan2html [-h,--help] command target filename
 A Trivy plugin that scans and output the results to a html file.
Options:
  -h, --help    Show usage.
Examples:
  # Scan `alpine:latest` image
  trivy scan2html image alpine:latest result.html

  # Scan local folder
  trivy scan2html fs . result.html
EOS
  exit
}


tmp_result="results.json"

function scan {
  BASEDIR=$(dirname "$0")
  args=("${@:2:$#-2}")
  reportName="${!#}"
  echo "reportName: $reportName"
  scanner="$1"
  echo "scanner: scanner"
  set -- "$1" "${args[@]}" "$reportName"
  echo "BASEDIR: $BASEDIR"
  echo "all_params: $@"
  echo "args: $args"
  echo "reportName: $reportName"
  trivy "$scanner" --format json -o "$BASEDIR"/$tmp_result "${args[@]}"
  if [ -f $reportName ]; then
    timestamp=$(date +%s)
    #timeUserFriendly=`date +"%Y-%m-%d %T"`
    timeUserFriendly=$(date +%Y%m%d%H%M%S)
    newReportName=${reportName/.html/($timeUserFriendly)}
    newReportName=$newReportName".html"
    echo "$reportName already exists, creating $newReportName instead!"
    reportName=$newReportName
  fi
  cat "$BASEDIR"/report_template.html >>"$reportName"
  {
    echo ""
    echo "<script>"
    echo "const resultJson = "
    cat  "$BASEDIR"/$tmp_result
    echo "</script>"
    echo "<script>"
    echo "const scanner = '$scanner';"
    echo "const createdAt = $(date +%s);"
    echo "initTheReportDetails();"
    echo "</script>"
    echo "</body>"
    echo "</html>"
  } >>"$reportName"

  echo "$reportName has been created!"
  trap 'rm -f $tmp_result' EXIT
}

if [[ ($# -eq 0) || ($1 == "--help") || ($1 == "-h") ]]; then
  help
fi

scan "$@"